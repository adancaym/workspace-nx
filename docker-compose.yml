version: '3'

services:
  mailhog:
      image: mailhog/mailhog
      container_name: 'mailhog'
      ports:
        - "1025:1025"
        - "8025:8025"
  sonarqube:
    image: sonarqube:community
    hostname: sonarqube
    container_name: sonarqube
    depends_on:
      - database
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://database:5432/sonarqube
      SONAR_JDBC_USERNAME: citizix_user
      SONAR_JDBC_PASSWORD: S3cret
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    ports:
      - "9000:9000"
  cache:
    image: redis:6.2-alpine
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --save 20 1 --loglevel warning 
    volumes: 
      - cache:/data
  database:
    image: postgres:14-alpine
    ports:
      - "5432:5432"
    volumes:
      - ~/apps/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=S3cret
      - POSTGRES_USER=citizix_user
      - POSTGRES_DB=citizix_db
  service-entity-user:
    build: 
      context: .
      dockerfile: ./apps/services/entity/user/Dockerfile
    volumes:
      - ./dist/apps/services/entity/user:/app
      - ./node_modules:/app/node_modules
    environment:
      - NODE_ENV=production
    depends_on:
      - cache
      - database
  service-entity-client:
    build: 
      context: .
      dockerfile: ./apps/services/entity/client/Dockerfile
    volumes:
      - ./dist/apps/services/entity/client:/app
      - ./node_modules:/app/node_modules
    environment:
      - NODE_ENV=production
    depends_on:
      - cache
      - database
  service-entity-customer:
    build: 
      context: .
      dockerfile: ./apps/services/entity/customer/Dockerfile
    volumes:
      - ./dist/apps/services/entity/customer:/app
      - ./node_modules:/app/node_modules
    environment:
      - NODE_ENV=production
    depends_on:
      - cache
      - database

  service-bff-authentication:
    build: 
      context: .
      dockerfile: ./apps/services/bff/authentication/Dockerfile
    volumes:
      - ./dist/apps/services/bff/authentication:/app
      - ./node_modules:/app/node_modules
    environment:
      - NODE_ENV=production
    depends_on:
      - cache
      - database
      - service-entity-user
      - service-entity-client
      - service-entity-customer
    ports:
        - "3000:3000"
      

volumes:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  postgresql:
  postgresql_data:
  cache:
    driver: local